#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

정수 연산자 정수 = 정수
정수 연산자 실수 = 실수 @실수가 하나라도 있으면 실수로 출력
실수 연산자 실수 = 실수

int main() {
  long long fact = 1;
  int n;
  printf("0보다 큰 정수 : ");
  scanf("%d", &n);

  for (int i = 1; i <= n; i++) {
     fact *= i; 
  }
  printf("%d! = %lld\n", n, fact);
}


int main() {
  for (int i = 1; i <= 100; i++) {
     sum += 1;  // sum = sum + 1 와 동일
  }
     printf("합 = %d\n", sum);
}


int main() {
  for (int i = 0; i < 5; i++) {
     printf("숫자 = %d\n", i);
  }
}


int main() {
  int sum = 3;
  int num = 2;

  printf("평균 = %d\n", sum / num);
  printf("평균 = %lf\n", sum / (double)num);
  printf("평균 = %lf\n", (double)sum / num);
  printf("평균 = %f\n", sum / (float)num);
}


동전교환기: 금액(1000원 단위 아님, 임의의 금액)을 입력받아
500, 100, 10 동전 개수를 출력
// 간략 실행 예: 1000 => 500 2개, 100 0개, 10 0개 

int main() {
  int money = 0;

  printf("금액 : ");
  scanf("%d", &money);

  int a = money / 500;
  int b = (money % 500) / 100;
  int c = ((money % 500) % 100) / 10;

  printf("500원 %d개, 100원 %d개, 10원 %d개\n", a, b, c);
}


int main() {
  int value = 386;

  int h = value / 100;
  int d = value % 100 / 10;  // value / 10 % 10; 도 가능
  int n = value % 10;

  printf("%h백%d십%n\n", h, d, n);
}


시간을 24시단위(0 ~ 23)로 입력받아 오전/오후 1~12형식으로 출력
실행 예 간략 표현: 0 => 오전 12시, 12 => 오후 12시, 1 => 오전 1시, 13 => 오후 1시

int main() {
  int hour;
  
  printf("시간(0~23) : ");
  scanf("%d", &hour);
  
  if (hour == 0)
  printf ("오전 12시\n");
  else if ( 0 < hour < 12) 
  printf ("오전 %d시\n", hour);
  else if (hour == 12) 
  printf("오후 12시\n");
  else if ( 12 < hour < 24)
  printf("오후 %d시\n");
  else printf("범위 오류\n");
} 


놀이기구 탑승 가능 여부
키를 입력받아 140 이상이면 "가능" 출력
140 미만이면 나이를 입력받아 10살 이상이면 "가능" 출력, 아니면 "불가" 출력
힌트: if 블럭 내 if 문

int main() {
  int a, age = 0;

  printf("키 : \n");
  scanf("%d", &a);

  if (a < 140) {
     printf("나이: \n");
     scanf("%d", &age);
     if (age >= 10)
        printf("가능\n");
     else
        printf("불가\n");
  }
  else {
     printf("가능\n");
  }
  return 0;
}


정수(int) 문자(char) 정수(int)를 입력받아 연산(+ - * / %)결과를 출력, 유효한 연산자 아니면 . . .
연산자 별 switch문 이용 권장, if문 사용해도 됨

수식 입력 : 1 + 2
3

수식 입력 : 1 & 2
유효한 연산자 아님

수식 입력 : 5 % 3
2

int main() {
   int x, y;
  char op;
  printf("수식 입력 : \n");
  scanf("%d %c %d", &x, &op, &y);

  switch (op) {
  case '+':
     printf("%d\n", x + y);
     break;
  case '-':
     printf("%d\n", x - y);
     break;
  case '*':
     printf("%d\n", x * y);
     break;
  case '/':
     printf("%d\n", x / y);
     break;
  case '%':
     printf("%d\n", x % y);
     break;
  default:
     printf("유효한 연산자가 아님\n");
  }
}



삼각형의 세 변의 길이(실수 float)를 입력받아 유효한 삼각형인지 검사

세 변의 길이: 1.0 2.0 3,0
유효한 삼각형 아님

세 변의 길이: 3.0 4.0 5.0
유효한 삼각형

int main() {

  float a, b, c;

  printf("삼각형의 세 변의 길이를 입력하시오. \n");
  scanf("%f %f %f", &a, &b, &c);

  if (a + b > c && b + c > a && c + a >= b) {
     printf("유효한 삼각형\n");
  }
  else {
     printf("유효하지 않은 삼각형\n");
  }
  return 0;
}
